name: Sequent Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: |
          dotnet restore TestDrivers9/TestDrivers9.csproj
          dotnet restore UnitTest_L10/UnitTest_L10.csproj
          dotnet restore ClassMassiv8/ClassMassiv8.csproj

      - name: Build project
        run: dotnet build TestDrivers9/TestDrivers9.csproj --configuration Debug

      - name: Build project
        run: dotnet build TestDrivers9/TestDrivers9.csproj --configuration Release

      - name: Publish project
        run: dotnet publish TestDrivers9/TestDrivers9.csproj --configuration Release --output TestDrivers9/bin/Release/net7.0

      - name: Build test project
        run: dotnet build UnitTest_L10/UnitTest_L10.csproj --configuration Debug

      - name: Build test project
        run: dotnet build UnitTest_L10/UnitTest_L10.csproj --configuration Release

      - name: Publish test project
        run: dotnet publish UnitTest_L10/UnitTest_L10.csproj --configuration Release --output UnitTest_L10/bin/Release/net7.0

  testing-configuration:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: '7.0.x'
      
      - name: Setup coverlet
        run: dotnet tool install --global coverlet.console

      - name: Restore dependencies
        run: |
          dotnet restore TestDrivers9/TestDrivers9.csproj
          dotnet restore UnitTest_L10/UnitTest_L10.csproj
          dotnet restore ClassMassiv8/ClassMassiv8.csproj

      - name: Verify output directory
        run: |
          if [ -d "UnitTest_L10/bin/Release/net7.0/" ]; then
            echo "Test output directory exists"
          else
            echo "Test output directory does not exist"
          fi

      - name: Verify test DLL exists
        run: |
          if [ -f "UnitTest_L10/bin/Release/net7.0/UnitTest_L10.dll" ]; then
            echo "Test DLL exists"
          else
            echo "Test DLL does not exist"
            exit 1
          fi

      - name: Run tests with coverage and generate report
        run: coverlet UnitTest_L10/bin/Release/net7.0/UnitTest_L10.dll --target "dotnet" --targetargs "test UnitTest_L10/UnitTest_L10.csproj --no-build --configuration Release" --format cobertura --output coverage.xml

  artifacts-save-documents:
    needs: testing-configuration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
            dotnet-version: '7.0.x'
        
      - name: Restore dependencies
        run: |
          dotnet restore TestDrivers9/TestDrivers9.csproj
          dotnet restore UnitTest_L10/UnitTest_L10.csproj
          dotnet restore ClassMassiv8/ClassMassiv8.csproj

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-build-artifacts
          path: coverage.xml